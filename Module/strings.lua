stringsLanguage = {
  langs = {
    {'ru', 'Русский'},
    {'en', 'English'},
    -- {'in', 'हिन्दी'},
    -- {'cn', '中文'},
    -- {'es', 'Español'},
  },
  ['ru'] = {
    blocks = {
      -- event
      ['onStart'] = {'При старте'},
      ['onClick'] = {'Когда палец прикасается к объекту'},
      ['onClickEnd'] = {'Когда палец отпускает объект'},
      ['onClickMove'] = {'Пока палец не отпустил объект', {'Макс. смещение (X):', 'Макс. смещение (Y):'}},
      ['onFun'] = {'Когда будет получена функция', {'Название функции:'}},
      ['onCondition'] = {'Когда условие станет истинной', {'Условие:'}},
      ['onConditionWhile'] = {'Пока условие истинно', {'Условие:'}},
      ['onCollisionStart'] = {'Когда коллизия произойдёт'},
      ['onCollisionEnd'] = {'Когда коллизия закончится'},
      ['onClickDisplay'] = {'Когда палец касается экрана'},
      ['onClickDisplayEnd'] = {'Когда палец отпускает экран'},
      ['onClickDisplayMove'] = {'Пока палец касается экрана', {'Макс. смещение (X):', 'Макс. смещение (Y):'}},
      ['onBack'] = {'При нажатии на кнопку "Назад"'},
      ['onHide'] = {'Приложение свернули с экрана'},
      ['onView'] = {'Приложение вернули на экран'},

      -- data
      ['setVar'] = {'Установить значение переменной', {'Название переменной:', 'Значение:'}},
      ['updVar'] = {'Добавить значение к переменной', {'Название переменной:', 'Значение:'}},
      ['setShowText'] = {'Создать текст', {'Имя текста:', 'Текст:', 'Шрифт:', 'Размер:', 'Цвет:', 'Прозрачность:'}},
      ['setShowText2'] = {'Создать текст с шириной и высотой', {'Имя текста:', 'Текст:', 'Шрифт:', 'Размер:', 'Ширина:', 'Высота:'}},
      ['setRemoveText'] = {'Удалить текст', {'Имя текста:'}},
      ['setHideText'] = {'Скрыть текст', {'Имя текста:'}},
      ['setViewText'] = {'Показать текст', {'Имя текста:'}},
      ['setText'] = {'Установить текст', {'Имя текста:', 'Текст:'}},
      ['setVarText'] = {'Привязать переменную к тексту', {'Имя текста:', 'Название переменной:'}},
      ['setPosText'] = {'Установить позицию текста', {'Имя текста:', 'Значение (X):', 'Значение (Y)'}},
      ['setPosXText'] = {'Установить позицию X текста', {'Имя текста:', 'Значение (X):'}},
      ['setPosYText'] = {'Установить позицию Y текста', {'Имя текста:', 'Значение (Y):'}},
      ['setRotationText'] = {'Установить вращение текста', {'Имя текста:', 'Значение (0-360):'}},
      ['setAlignText'] = {'Установить выравнивание текста', {'Имя текста:', 'Вырoвнять X:', 'Вырoвнять Y:'}},
      ['setAlphaText'] = {'Установить прозрачность текста', {'Имя текста:', 'Значение (0-100):'}},
      ['setColorText'] = {'Установить цвет текста', {'Имя текста:', 'Цвет:'}},
      ['setRGBColorText'] = {'Установить rgb цвет текста', {'Имя текста:', 'Значение r (0-255):', 'Значение g (0-255):', 'Значение b (0-255):'}},
      ['setHEXColorText'] = {'Установить hex цвет текста', {'Имя текста:', 'Значение hex:'}},
      ['updColorText'] = {'Изменить цвет текста', {'Имя текста:', 'Значение (0-255):'}},
      ['updRColorText'] = {'Изменить красный цвет текста', {'Имя текста:', 'Значение (0-255):'}},
      ['updGColorText'] = {'Изменить зелёный цвет текста', {'Имя текста:', 'Значение (0-255):'}},
      ['updBColorText'] = {'Изменить синий цвет текста', {'Имя текста:', 'Значение (0-255):'}},
      ['setFrontText'] = {'Разместить текст на слой выше', {'Имя текста:'}},
      ['setBackText'] = {'Разместить текст на слой ниже', {'Имя текста:'}},
      ['readVar'] = {'Считать переменную', {'Название переменной:'}},
      ['writeVar'] = {'Сохранить переменную', {'Название переменной:'}},
      ['updTable'] = {'Перезаписать таблицу', {'Название таблицы:', 'Значение (Таблица):'}},
      ['setTable'] = {'Установить элемент в таблицу', {'Ключ:', 'Название таблицы:', 'Значение:'}},
      ['removeTable'] = {'Удалить элемент из таблицы', {'Название таблицы:', 'Ключ:'}},

      -- object
      ['setPos'] = {'Установить позицию', {'Значение (X):', 'Значение (Y):'}},
      ['setX'] = {'Установить позицию X', {'Значение (X):'}},
      ['setY'] = {'Установить позицию Y', {'Значение (Y):'}},
      ['setSize'] = {'Установить размер', {'Значение (%):'}},
      ['setWidth'] = {'Установить ширину', {'Значение:'}},
      ['setHeight'] = {'Установить высоту', {'Значение:'}},
      ['updX'] = {'Изменить позицию X', {'Значение (X):'}},
      ['updY'] = {'Изменить позицию Y', {'Значение (Y):'}},
      ['updSize'] = {'Изменить размер', {'Значение (%):'}},
      ['updWidth'] = {'Изменить ширину', {'Значение:'}},
      ['updHeight'] = {'Изменить высоту', {'Значение:'}},
      ['setHide'] = {'Скрыть объект с экрана'},
      ['setView'] = {'Показать объект на экране'},
      ['setRotation'] = {'Установить вращение', {'Значение (0-360):'}},
      ['setAlpha'] = {'Установить прозрачность', {'Значение (0-100):'}},
      ['updRotation'] = {'Изменить вращение', {'Значение (0-360):'}},
      ['updAlpha'] = {'Изменить прозрачность', {'Значение (0-100):'}},
      ['setTag'] = {'Присвоить к тегу', {'Имя тега:'}},
      ['setFlipX'] = {'Отразить по X'},
      ['setFlipY'] = {'Отразить по Y'},
      ['setTransitionPos'] = {'Плавно установить на позицию', {'Значение (Секунды):', 'Значение (X):', 'Значение (Y):'}},
      ['setTransitionPosX'] = {'Плавно установить на позицию X', {'Значение (Секунды):', 'Значение (X):'}},
      ['setTransitionPosY'] = {'Плавно установить на позицию Y', {'Значение (Секунды):', 'Значение (Y):'}},
      ['setTransitionWidth'] = {'Плавно установить ширину', {'Значение (Секунды):', 'Значение:'}},
      ['setTransitionHeight'] = {'Плавно установить высоту', {'Значение (Секунды):', 'Значение:'}},
      ['setTransitionSize'] = {'Плавно установить размер', {'Значение (Секунды):', 'Значение (%):'}},
      ['setTransitionRotation'] = {'Плавно установить вращение', {'Значение (Секунды):', 'Значение (0-360):'}},
      ['setTransitionAlpha'] = {'Плавно установить прозрачность', {'Значение (Секунды):', 'Значение (0-100):'}},
      ['setTransitionPosAngle'] = {'Плавно установить позицию угла', {'Значение (Секунды):', 'Значение (Угол):', 'Значение (X):', 'Значение (Y):'}},
      ['setAnchorX'] = {'Установить точку привязки по X', {'Значение (0-100):'}},
      ['setAnchorY'] = {'Установить точку привязки по Y', {'Значение (0-100):'}},
      ['setFront'] = {'Разместить на слой выше'},
      ['setBack'] = {'Разместить на слой ниже'},
      ['setNameTexture'] = {'Установить текстуру по имени', {'Имя текстуры:'}},
      ['setIndexTexture'] = {'Установить текстуру по индексу', {'Индекс текстуры:'}},
      ['setLinkTexture'] = {'Установить текстуру по ссылке', {'Значение (Ссылка):'}},
      ['setResourceTexture'] = {'Установить текстуру из ресурсов', {'Имя ресурса:'}},
      ['resetSize'] = {'Установить размер по текстуре'},

      -- shape
      ['createRect'] = {'Создать прямоугольник', {'Имя фигуры:', 'Закруглённость углов:', 'Ширина:', 'Высота:'}},
      ['createCircle'] = {'Создать круг', {'Имя фигуры:', 'Радиус:'}},
      ['createPolygon'] = {'Создать полигон', {'Имя фигуры:', 'Таблица углов:'}},
      ['createCopy'] = {'Создать копию объекта', {'Имя фигуры:'}},
      ['setListenerShape'] = {'Привязать фигуру к событиям', {'Имя фигуры:'}},
      ['setSnapshotShape'] = {'Привязать фигуру к снапшоту', {'Имя фигуры:'}},
      ['removeShape'] = {'Удалить фигуру', {'Имя фигуры:'}},
      ['removeListenerShape'] = {'Отвязать фигуру от событий', {'Имя фигуры:'}},
      ['removeSnapshotShape'] = {'Отвязать фигуру от снапшота', {'Имя фигуры:'}},
      ['setPosShape'] = {'Установить позицию фигуры', {'Имя фигуры:', 'Значение (X):', 'Значение (Y):'}},
      ['setPosXShape'] = {'Установить позицию X фигуры', {'Имя фигуры:', 'Значение (X):'}},
      ['setPosYShape'] = {'Установить позицию Y фигуры', {'Имя фигуры:', 'Значение (Y):'}},
      ['setSizeShape'] = {'Установить размер фигуры', {'Имя фигуры:', 'Значение (%):'}},
      ['setRadiusShape'] = {'Установить радиус фигуры (круга)', {'Имя фигуры:', 'Значение (Радиус):'}},
      ['resetSizeShape'] = {'Установить размер фигуры по текстуре', {'Имя фигуры:'}},
      ['setWidthShape'] = {'Установить ширину фигуры', {'Имя фигуры:', 'Значение:'}},
      ['setHeightShape'] = {'Установить высоту фигуры', {'Имя фигуры:', 'Значение:'}},
      ['setNameTextureShape'] = {'Наложить текстуру по имени', {'Имя фигуры:', 'Имя текстуры:'}},
      ['setIndexTextureShape'] = {'Наложить текстуру по индексу', {'Имя фигуры:', 'Индекс текстуры:'}},
      ['setSdcardTextureShape'] = {'Наложить текстуру по пути к файлу', {'Имя фигуры:', 'Путь к файлу:'}},
      ['setMediaTextureShape'] = {'Наложить текстуру из галереи', {'Имя фигуры:'}},
      ['setResourceTextureShape'] = {'Наложить текстуру из ресурсов', {'Имя фигуры:', 'Имя ресурса:'}},
      ['updPosXShape'] = {'Изменить позицию X фигуры', {'Имя фигуры:', 'Значение (X):'}},
      ['updPosYShape'] = {'Изменить позицию Y фигуры', {'Имя фигуры:', 'Значение (Y):'}},
      ['updSizeShape'] = {'Изменить размер фигуры', {'Имя фигуры:', 'Значение (%):'}},
      ['updWidthShape'] = {'Изменить ширину фигуры', {'Имя фигуры:', 'Значение:'}},
      ['updHeightShape'] = {'Изменить высоту фигуры', {'Имя фигуры:', 'Значение:'}},
      ['setHideShape'] = {'Скрыть фигуру с экрана', {'Имя фигуры:'}},
      ['setViewShape'] = {'Показать фигуру на экране', {'Имя фигуры:'}},
      ['setColorShape'] = {'Установить цвет фигуры', {'Имя фигуры:', 'Цвет:'}},
      ['setRGBColorShape'] = {'Установить rgb цвет фигуры', {'Имя фигуры:', 'Значение r (0-255):', 'Значение g (0-255):', 'Значение b (0-255):'}},
      ['setHEXColorShape'] = {'Установить hex цвет фигуры', {'Имя фигуры:', 'Значение hex:'}},
      ['setRotationShape'] = {'Установить вращение фигуры', {'Имя фигуры:', 'Значение (0-360):'}},
      ['setAlphaShape'] = {'Установить прозрачность фигуры', {'Имя фигуры:', 'Значение (0-100):'}},
      ['updRotationShape'] = {'Изменить вращение фигуры', {'Имя фигуры:', 'Значение (0-360):'}},
      ['updAlphaShape'] = {'Изменить прозрачность фигуры', {'Имя фигуры:', 'Значение (0-100):'}},
      ['setFlipXShape'] = {'Отразить фигуру по X', {'Имя фигуры:'}},
      ['setFlipYShape'] = {'Отразить фигуру по Y', {'Имя фигуры:'}},
      ['setTransitionPosShape'] = {'Плавно установить на позицию', {'Имя фигуры:', 'Значение (Секунды):', 'Значение (X):', 'Значение (Y):'}},
      ['setTransitionPosXShape'] = {'Плавно установить на позицию X', {'Имя фигуры:', 'Значение (Секунды):', 'Значение (X):'}},
      ['setTransitionPosYShape'] = {'Плавно установить на позицию Y', {'Имя фигуры:', 'Значение (Секунды):', 'Значение (Y):'}},
      ['setTransitionWidthShape'] = {'Плавно установить ширину', {'Имя фигуры:', 'Значение (Секунды):', 'Значение:'}},
      ['setTransitionHeightShape'] = {'Плавно установить высоту', {'Имя фигуры:', 'Значение (Секунды):', 'Значение:'}},
      ['setTransitionSizeShape'] = {'Плавно установить размер', {'Имя фигуры:', 'Значение (Секунды):', 'Значение (%):'}},
      ['setTransitionRotationShape'] = {'Плавно установить вращение', {'Имя фигуры:', 'Значение (Секунды):', 'Значение (0-360):'}},
      ['setTransitionAlphaShape'] = {'Плавно установить прозрачность', {'Имя фигуры:', 'Значение (Секунды):', 'Значение (0-100):'}},
      ['setTransitionPosAngleShape'] = {'Плавно установить позицию угла', {'Имя фигуры:', 'Значение (Секунды):', 'Значение (Угол):', 'Значение (X):', 'Значение (Y):'}},
      ['setAnchorShape'] = {'Установить точку привязки фигуры', {'Имя фигуры:', 'Значение X (0-100):', 'Значение Y (0-100):'}},
      ['setFrontShape'] = {'Разместить фигуру на слой выше', {'Имя фигуры:'}},
      ['setBackShape'] = {'Разместить фигуру на слой ниже', {'Имя фигуры:'}},

      -- tag
      ['setTag'] = {'Присвоить объект к тегу', {'Имя тега:'}},
      ['setTagShape'] = {'Присвоить фигуру к тегу', {'Имя тега:', 'Имя фигуры:'}},
      ['setPosTag'] = {'Установить позицию тега', {'Имя тега:', 'Значение (X):', 'Значение (Y):'}},
      ['setXTag'] = {'Установить позицию X тега', {'Имя тега:', 'Значение (X):'}},
      ['setYTag'] = {'Установить позицию Y тега', {'Имя тега:', 'Значение (Y):'}},
      ['updXTag'] = {'Изменить позицию X тега', {'Имя тега:', 'Значение (X):'}},
      ['updYTag'] = {'Изменить позицию Y тега', {'Имя тега:', 'Значение (Y):'}},
      ['setHideTag'] = {'Скрыть тег с экрана', {'Имя тега:'}},
      ['setViewTag'] = {'Показать тег на экране', {'Имя тега:'}},
      ['setAlphaTag'] = {'Установить прозрачность тега', {'Имя тега:', 'Значение (0-100):'}},
      ['updAlphaTag'] = {'Изменить прозрачность тега', {'Имя тега:', 'Значение (0-100):'}},
      ['setTransitionPosTag'] = {'Плавно установить на позицию', {'Имя тега:', 'Значение (Секунды):', 'Значение (X):', 'Значение (Y):'}},
      ['setTransitionPosXTag'] = {'Плавно установить на позицию X', {'Имя тега:', 'Значение (Секунды):', 'Значение (X):'}},
      ['setTransitionPosYTag'] = {'Плавно установить на позицию Y', {'Имя тега:', 'Значение (Секунды):', 'Значение (Y):'}},
      ['setTransitionAlphaTag'] = {'Плавно установить прозрачность', {'Имя тега:', 'Значение (Секунды):', 'Значение (0-100):'}},
      ['setFrontTag'] = {'Разместить тег на слой выше', {'Имя тега:'}},
      ['setBackTag'] = {'Разместить тег на слой ниже', {'Имя тега:'}},
      ['setXSnapshot'] = {'Установить позицию X снапшота', {'Значение (X):'}},
      ['setYSnapshot'] = {'Установить позицию Y снапшота', {'Значение (Y):'}},
      ['updXSnapshot'] = {'Изменить позицию X снапшота', {'Значение (X):'}},
      ['updYSnapshot'] = {'Изменить позицию Y снапшота', {'Значение (Y):'}},
      ['setHideSnapshot'] = {'Скрыть снапшот с экрана'},
      ['setViewSnapshot'] = {'Показать снапшот на экране'},
      ['setAlphaSnapshot'] = {'Установить прозрачность снапшота', {'Значение (0-100):'}},
      ['updAlphaSnapshot'] = {'Изменить прозрачность снапшота', {'Значение (0-100):'}},

      -- control
      ['fun'] = {'Вызвать функцию', {'Название функции:'}},
      ['funParams'] = {'Вызвать функцию с параметрами', {'Название функции:', 'Название таблицы:'}},
      ['useTag'] = {'Использовать блоки для тега', {'Имя тега:'}},
      ['useTagEnd'] = {'Конец использования тега'},
      ['if'] = {'Если условие истина', {'Условие:'}},
      ['ifElse'] = {'Если условие истина, Иначе', {'Условие:'}},
      ['else'] = {'Иначе'},
      ['ifEnd'] = {'Конец условия'},
      ['ifElseEnd'] = {'Конец условия'},
      ['while'] = {'Повторять, пока условие истина', {'Условие:'}},
      ['whileEnd'] = {'Конец повторения по условию'},
      ['for'] = {'Повторить N раз', {'Количество повторов (N):'}},
      ['forEnd'] = {'Конец повторения'},
      ['forI'] = {'Цикл', {'Локальная (Index):', 'Значение (От):', 'Значение (До):', 'Значение (Шаг):'}},
      ['forIEnd'] = {'Конец цикла'},
      ['forT'] = {'Пройтись по всем элементам таблицы', {'Название таблицы:', 'Локальная (Value):', 'Локальная (Key):'}},
      ['forTEnd'] = {'Конец прохода по элементам'},
      ['enterFrame'] = {'Повторять вечно'},
      ['enterFrameEnd'] = {'Конец вечности'},
      ['timer'] = {'Таймер', {'Значение (Секунды):', 'Кол-во повторений:'}},
      ['timerEnd'] = {'Конец таймера'},
      ['groupCreate'] = {'Создать группу', {'Название группы:'}},
      ['groupView'] = {'Показать группу', {'Название группы:'}},
      ['setColorBackground'] = {'Установить цвет фона', {'Цвет:'}},
      ['setRGBColorBackground'] = {'Установить rgb цвет фона', {'Значение r (0-255):', 'Значение g (0-255):', 'Значение b (0-255):'}},
      ['setHEXColorBackground'] = {'Установить hex цвет фона', {'Значение hex:'}},
      ['setPortraitOrientation'] = {'Установить портретную ориентацию'},
      ['setLandscapeOrientation'] = {'Установить ландшафтную ориентацию'},
      ['fileLine'] = {'Прочитать файл по строкам', {'Локальная (Value):', 'Путь к файлу:', 'Каталог:'}},
      ['fileLineEnd'] = {'Конец прочтения файла'},
      ['fileRead'] = {'Прочитать файл', {'Название переменной:', 'Путь к файлу:', 'Каталог:'}},
      ['fileWrite'] = {'Перезаписать файл', {'Значение:', 'Путь к файлу:', 'Каталог:'}},
      ['fileUpdate'] = {'Записать в конец файла', {'Значение:', 'Путь к файлу:', 'Каталог:'}},
      ['fileMove'] = {'Переместить/переименовать файл', {'Путь к файлу (1):', 'Каталог (1):', 'Путь к файлу (2):', 'Каталог (2):'}},
      ['fileCopy'] = {'Копировать файл', {'Путь к файлу (1):', 'Каталог (1):', 'Путь к файлу (2):', 'Каталог (2):'}},
      ['fileRemove'] = {'Удалить файл', {'Путь к файлу:', 'Каталог:'}},
      ['setAccelerometer'] = {'Включить акселерометр'},
      ['setAccelerometerInterval'] = {'Установить частоту акселерометра', {'Значение (Hz):'}},
      ['setNotifications'] = {'Зарегистрировать уведомление', {'Значение (Текст):', 'Значение (Секунды):', 'Звук:'}},
      ['onMultitouch'] = {'Активировать мультикасания'},
      ['offMultitouch'] = {'Деактивировать мультикасания'},
      ['closeApp'] = {'Закрыть приложение'},
      ['commentYourself'] = {'Комментарий (для себя)', {'Комментарий:'}},

      -- controlother
      ['playSound'] = {'Проиграть звук', {'Имя ресурса:', 'Кол-во повторений:'}},
      ['pauseSound'] = {'Поставить звук на паузу', {'Имя ресурса:'}},
      ['resumeSound'] = {'Снять звук с паузы', {'Имя ресурса:'}},
      ['rewindSound'] = {'Перемотать звук', {'Имя ресурса:', 'Значение (Секунды):'}},
      ['setVolumeSound'] = {'Установить громкость звука', {'Имя ресурса:', 'Значение (0-1000):'}},
      ['setTotalVolumeSound'] = {'Установить общую громкость звука', {'Значение (0-1000):'}},
      ['stopSound'] = {'Остановить все звуки'},
      ['createVideo'] = {'Создать видео', {'Имя видео:', 'Имя ресурса:'}},
      ['createLinkVideo'] = {'Создать видео по ссылке', {'Имя видео:', 'Значение (Ссылка):'}},
      ['rewindVideo'] = {'Перемотать видео', {'Имя видео:', 'Значение (Секунды):'}},
      ['playVideo'] = {'Снять видео с паузы', {'Имя видео:'}},
      ['pauseVideo'] = {'Поставить видео на паузу', {'Имя видео:'}},
      ['viewVideo'] = {'Показать видео', {'Имя видео:'}},
      ['hideVideo'] = {'Скрыть видео', {'Имя видео:'}},
      ['muteVideo'] = {'Отключить звук в видео', {'Имя видео:'}},
      ['unmuteVideo'] = {'Включить звук в видео', {'Имя видео:'}},
      ['setPosVideo'] = {'Установить позицию видео', {'Имя видео:', 'Значение (X):', 'Значение (Y):'}},
      ['setWidthVideo'] = {'Установить ширину видео', {'Имя видео:', 'Значение:'}},
      ['inputText'] = {'Получить текст от пользователя', {'Текст для пользователя:', 'Название переменной:'}},
      ['createTextField'] = {'Создать однострочное текстовое поле', {'Текстовое поле:', 'Текст для пользователя:', 'Цвет:', 'Размер:', 'Фон поля:', 'Шрифт:'}},
      ['createTextBox'] = {'Создать многострочное текстовое поле', {'Текстовое поле:', 'Текст для пользователя:', 'Цвет:', 'Размер:', 'Фон поля:', 'Шрифт:'}},
      ['removeTextField'] = {'Удалить текстовое поле', {'Текстовое поле:'}},
      ['getTextField'] = {'Получить текст из поля', {'Текстовое поле:', 'Название переменной:'}},
      ['setTextField'] = {'Установить текст в поле', {'Текстовое поле:', 'Значение (Текст):'}},
      ['getOldTextField'] = {'Получить старый текст', {'Текстовое поле:', 'Название переменной:'}},
      ['setPosField'] = {'Установить позицию текстового поля', {'Текстовое поле:', 'Значение (X):', 'Значение (Y):'}},
      ['setSizeField'] = {'Установить размеры текстового поля', {'Текстовое поле:', 'Значение (Ширина):', 'Значение (Высота):'}},
      ['setHideField'] = {'Спрятать текстовое поле', {'Текстовое поле:'}},
      ['setViewField'] = {'Показать текстовое поле', {'Текстовое поле:'}},
      ['setInputTypeField'] = {'Установить тип ввода', {'Текстовое поле:', 'Тип ввода:'}},
      ['setEditField'] = {'Разрешение на редактирование', {'Текстовое поле:', 'Разрешение:'}},
      ['closeKeyboard'] = {'Выключить экранную клавиатуру'},
      ['createEmitter'] = {'Создать частицы', {'Имя частицы:', 'Тип частицы:'}},
      ['setPosEmitter'] = {'Установить позицию частицы', {'Имя частицы:', 'Значение (X):', 'Значение (Y):'}},
      ['setSizeEmitter'] = {'Установить размер частицы', {'Имя частицы:', 'Значение (%):'}},
      ['setSpeedEmitter'] = {'Установить скорость частицы', {'Имя частицы:', 'Значение (Скорость):'}},
      ['setRotationEmitter'] = {'Установить вращение частицы', {'Имя частицы:', 'Значение (0-360):'}},
      ['setGravityEmitter'] = {'Установить гравитацию частицы', {'Имя частицы:', 'Значение (X):', 'Значение (Y):'}},
      ['removeEmitter'] = {'Удалить частицы', {'Имя частицы:'}},
      ['removeAllEmitter'] = {'Удалить все частицы'},
      ['setStartRedColorEmitter'] = {'Установить начальный красный цвет', {'Имя частицы:', 'Значение r (0-100):'}},
      ['setStartGreenColorEmitter'] = {'Установить начальный зелёный цвет', {'Имя частицы:', 'Значение g (0-100):'}},
      ['setStartBlueColorEmitter'] = {'Установить начальный синий цвет', {'Имя частицы:', 'Значение b (0-100):'}},
      ['setStartAlphaColorEmitter'] = {'Установить начальную прозрачность', {'Имя частицы:', 'Значение a (0-100):'}},
      ['setFinishRedColorEmitter'] = {'Установить конечный красный цвет', {'Имя частицы:', 'Значение r (0-100):'}},
      ['setFinishGreenColorEmitter'] = {'Установить конечный зелёный цвет', {'Имя частицы:', 'Значение g (0-100):'}},
      ['setFinishBlueColorEmitter'] = {'Установить конечный синий цвет', {'Имя частицы:', 'Значение b (0-100):'}},
      ['setFinishAlphaColorEmitter'] = {'Установить конечную прозрачность', {'Имя частицы:', 'Значение a (0-100):'}},

      -- physics (objects)
      ['setBody'] = {'Добавить физическое тело', {'Тип:', 'Плотность:', 'Прыгучесть:', 'Трение:'}},
      ['removeBody'] = {'Удалить физическое тело'},
      ['setNewBody'] = {'Установить тип', {'Тип:'}},
      ['setHitboxMesh'] = {'Установить хитбокс (меш)', {'Грубость текселей:'}},
      ['setHitboxBox'] = {'Установить хитбокс (конструкции)', {'Хитбокс:'}},
      ['setHitboxCircle'] = {'Установить хитбокс (круг)', {'Значение (Радиус):'}},
      ['updHitbox'] = {'Обновить хитбокс'},
      ['setGravity'] = {'Установить гравитацию', {'Значение (Гравитация):'}},
      ['setLinearVelocity'] = {'Сделать прыжок', {'Значение (X):', 'Значение (Y):'}},
      ['setLinearVelocityX'] = {'Сделать прыжок по X', {'Значение (X):'}},
      ['setLinearVelocityY'] = {'Сделать прыжок по Y', {'Значение (Y):'}},
      ['setSensor'] = {'Установить режим датчика'},
      ['setNotSensor'] = {'Удалить режим датчика'},
      ['setFixedRotation'] = {'Сделать тело невращаемым'},
      ['setNotFixedRotation'] = {'Сделать тело вращаемым'},
      ['setWorldGravity'] = {'Установить общую гравитацию', {'Значение (X):', 'Значение (Y):'}},
      ['setVisiblePhysics'] = {'Показать хитбоксы'},
      ['setNotVisiblePhysics'] = {'Скрыть хитбоксы'},
      ['setBullet'] = {'Установить свойство пули'},
      ['setNotBullet'] = {'Удалить свойство пули'},
      ['setAwake'] = {'Разбудить'},
      ['setAngularVelocity'] = {'Установить угловую скорость', {'Значение:'}},
      ['setAngularDamping'] = {'Установить угловое затухание', {'Значение:'}},
      ['setLinearDamping'] = {'Установить линейное затухание', {'Значение:'}},
      ['setForce'] = {'Применить силу', {'Значение (X):', 'Значение (Y):'}},
      ['setLinearImpulse'] = {'Применить линейный импульс', {'Значение (X):', 'Значение (Y):'}},
      ['setTorque'] = {'Применить вращающую силу', {'Значение:'}},
      ['setAngularImpulse'] = {'Применить угловой импульс', {'Значение:'}},
      ['setPowerPhysics'] = {'Установить мощность физики', {'Вычислительная мощность:'}},
      ['startPhysics'] = {'Включить физику'},
      ['stopPhysics'] = {'Выключить физику'},

      -- physics (shapes)
      ['setBodyShape'] = {'Добавить физическое тело', {'Имя фигуры:', 'Тип:', 'Плотность:', 'Прыгучесть:', 'Трение:'}},
      ['removeBodyShape'] = {'Удалить физическое тело', {'Имя фигуры:'}},
      ['setNewBodyShape'] = {'Установить тип', {'Имя фигуры:', 'Тип:'}},
      ['setHitboxMeshShape'] = {'Установить хитбокс (меш)', {'Имя фигуры:', 'Грубость текселей:'}},
      ['setHitboxBoxShape'] = {'Установить хитбокс (конструкции)', {'Имя фигуры:', 'Хитбокс:'}},
      ['setHitboxCircleShape'] = {'Установить хитбокс (круг)', {'Имя фигуры:', 'Значение (Радиус):'}},
      ['updHitboxShape'] = {'Обновить хитбокс', {'Имя фигуры:'}},
      ['setGravityShape'] = {'Установить гравитацию', {'Имя фигуры:', 'Значение (Гравитация):'}},
      ['setLinearVelocityShape'] = {'Сделать прыжок', {'Имя фигуры:', 'Значение (X):', 'Значение (Y):'}},
      ['setLinearVelocityXShape'] = {'Сделать прыжок по X', {'Имя фигуры:', 'Значение (X):'}},
      ['setLinearVelocityYShape'] = {'Сделать прыжок по Y', {'Имя фигуры:', 'Значение (Y):'}},
      ['setSensorShape'] = {'Установить режим датчика', {'Имя фигуры:'}},
      ['setNotSensorShape'] = {'Удалить режим датчика', {'Имя фигуры:'}},
      ['setFixedRotationShape'] = {'Сделать тело невращаемым', {'Имя фигуры:'}},
      ['setNotFixedRotationShape'] = {'Сделать тело вращаемым', {'Имя фигуры:'}},
      ['setBulletShape'] = {'Установить свойство пули', {'Имя фигуры:'}},
      ['setNotBulletShape'] = {'Удалить свойство пули', {'Имя фигуры:'}},
      ['setAwakeShape'] = {'Разбудить', {'Имя фигуры:'}},
      ['setAngularVelocityShape'] = {'Установить угловую скорость', {'Имя фигуры:', 'Значение:'}},
      ['setAngularDampingShape'] = {'Установить угловое затухание', {'Имя фигуры:', 'Значение:'}},
      ['setLinearDampingShape'] = {'Установить линейное затухание', {'Имя фигуры:', 'Значение:'}},
      ['setForceShape'] = {'Применить силу', {'Имя фигуры:', 'Значение (X):', 'Значение (Y):'}},
      ['setLinearImpulseShape'] = {'Применить линейный импульс', {'Имя фигуры:', 'Значение (X):', 'Значение (Y):'}},
      ['setTorqueShape'] = {'Применить вращающую силу', {'Имя фигуры:', 'Значение:'}},
      ['setAngularImpulseShape'] = {'Применить угловой импульс', {'Имя фигуры:', 'Значение:'}},

      -- network
      ['openUrl'] = {'Открыть ссылку в браузере', {'Значение (Ссылка):'}},
      ['setGet'] = {'GET запрос', {'Значение (Ссылка):', 'Название переменной:'}},
      ['setPost'] = {'POST запрос', {'Значение (Ссылка):', 'Body:', 'Название переменной:', 'Headers:'}},
      ['setPut'] = {'PUT запрос', {'Значение (Ссылка):', 'Body:', 'Название переменной:', 'Headers:'}},
      ['setPatch'] = {'PATCH запрос', {'Значение (Ссылка):', 'Body:', 'Название переменной:', 'Headers:'}},
      ['setDelete'] = {'DELETE запрос', {'Значение (Ссылка):', 'Название переменной:'}},
      ['setToken'] = {'Инициализировать токен Firebase', {'Значение (Токен):'}},
      ['putFirebase'] = {'Записать в Firebase', {'Ключ:', 'Название переменной:', 'Значение:'}},
      ['patchFirebase'] = {'Обновить в Firebase', {'Ключ:', 'Название переменной:', 'Значение:'}},
      ['getFirebase'] = {'Получить из Firebase', {'Ключ:', 'Название переменной:'}},
      ['deleteFirebase'] = {'Удалить из Firebase', {'Ключ:', 'Название переменной:'}}
    },
    editorList = {
      fun = {
        {'ключ', 'key'},
        {'степень', 'power'},
        {'корень', 'radical'},
        {'рандом', 'random'},
        {'рандом_строка', 'random_str'},
        {'округлить', 'round'},
        {'остаток', 'remainder'},
        {'модуль', 'module'},
        {'в_число', 'tonumber'},
        {'в_текст', 'tostring'},
        {'заменить_в_тексте', 'gsub'},
        {'символ_из_текста', 'sub'},
        {'длина_текста', 'len'},
        {'найти_в_тексте', 'find'},
        {'проверка_ключа', 'key_check'},
        {'размер_таблицы', 'table_size'},
        {'декодировать_json', 'json_decode'},
        {'закодировать_json', 'json_encode'},
        {'регулярное_выражение', 'match'},
        {'максимум', 'max'},
        {'минимум', 'min'},
        {'синус', 'sin'},
        {'косинус', 'cos'},
        {'тангенс', 'tan'},
        {'котангенс', 'ctan'},
        {'арксинус', 'arcsin'},
        {'арккосинус', 'arccos'},
        {'арктангенс', 'arctan'},
        {'арктангенс2', 'arctan2'},
        {'арккотангенс', 'arcctan'},
        {'натуральный_логарифм', 'log'},
        {'десятичный_логарифм', 'log10'},
        {'pi', 'pi'},
        {'время_unix', 'unix_time'},
      },
      prop = {
        {'получить_текст', 'get_text'},
        {'позиция_x', 'pos_x'},
        {'позиция_y', 'pos_y'},
        {'позиция_z', 'pos_z'},
        {'ширина', 'width'},
        {'высота', 'height'},
        {'нажатие', 'click'},
        {'общая_длина_звука', 'total_len_sound'},
        {'текущая_длина_звука', 'current_len_sound'},
        {'общая_длина_видео', 'total_len_video'},
        {'текущая_длина_видео', 'current_len_video'},
        {'угол', 'rotation'},
        {'прозрачность', 'alpha'},
        {'индекс_текстуры', 'index_texture'},
        {'имя_текстуры', 'name_texture'},
        -- {'количество_копий', 'count_copies'},
        {'тег', 'tag'},
        {'скорость_x', 'velocity_x'},
        {'скорость_y', 'velocity_y'},
        {'угловая_скорость', 'angular_velocity'},
      },
      log = {
        {',', ','},
        {'истина', 'true'},
        {'ложь', 'false'},
        {'=', '='},
        {'>', '>'},
        {'<', '<'},
        {'>=', '>='},
        {'<=', '<='},
        {'≠', '~='},
        {'и', 'and'},
        {'или', 'or'},
        {'не', 'not'},
      },
      device = {
        {'фпс', 'fps'},
        {'ширина_экрана', 'width_screen'},
        {'высота_экрана', 'height_screen'},
        {'верхняя_точка_экрана', 'top_point_screen'},
        {'нижняя_точка_экрана', 'bottom_point_screen'},
        {'правая_точка_экрана', 'rigth_point_screen'},
        {'левая_точка_экрана', 'left_point_screen'},
        {'высота_верхней_границы', 'height_top'},
        {'высота_нижней_границы', 'height_bottom'},
        {'палец_касается_экрана', 'finger_touching_screen'},
        {'палец_касается_экрана_x', 'finger_touching_screen_x'},
        {'палец_касается_экрана_y', 'finger_touching_screen_y'},
        {'количество_пальцев', 'count_touch'},
        {'количество_касаний', 'count_tap'},
        {'ускорение_x', 'gravity_x'},
        {'ускорение_y', 'gravity_y'},
        {'ускорение_z', 'gravity_z'},
        {'изменение_наклона_x', 'instant_x'},
        {'изменение_наклона_y', 'instant_y'},
        {'изменение_наклона_z', 'instant_z'},
        {'наклон_x', 'raw_x'},
        {'наклон_y', 'raw_y'},
        {'наклон_z', 'raw_z'},
      }
    },
    importErrorTitle = 'Загрузите обновление',
    importError = 'Данное приложение сделано на более новой версии CCode, пожалуйста, скачайте обновление',
    exportCCode = 'Подождите, пожалуйста... \nГенерируется архив .ccode',
    importCCode = 'Подождите, пожалуйста... \nРаспаковывается архив .ccode',
    offMagnetX = 'Выключить магнит по X',
    offMagnetY = 'Выключить магнит по Y',
    onMagnetX = 'Включить магнит по X',
    onMagnetY = 'Включить магнит по Y',
    saveAndExit = 'Сохранить хитбокс и выйти',
    index = 'Индекс: ',
    indexBox = 'Индекс конструкции',
    viewIndexBox = 'Показать индекс конструкции',
    viewLines = 'Показать линии',
    hideLines = 'Скрыть линии',
    onPhysics = 'Включить физику',
    viewHitbox = 'Показать хитбокс',
    hideHitbox = 'Скрыть хитбокс',
    addBox = 'Добавить конструкцию',
    removeBox = 'Удалить конструкцию',
    addPoint = 'Добавить точку',
    removePoint = 'Удалить точку',
    shapephyscircle = 'Круг',
    shapephysbox = 'Конструкции',
    shapephysmesh = 'Меш',
    editfieldtrue = 'Можно ред.',
    editfieldfalse = 'Нельзя ред.',
    typefielddefault = 'По умолчанию',
    typefieldnumber = 'Цифровая',
    typefielddecimal = 'Десятичные значения',
    typefieldphone = 'Номер телефона',
    typefieldurl = 'Ссылка',
    typefieldemail = 'Эл. адрес',
    typefieldnoemoji = 'Без смайликов',
    bgfieldtrue = 'Оставить',
    bgfieldfalse = 'Убрать',
    resourcesTitle = 'Ресурсы',
    resource = 'Управлять ресурсами',
    leftAlign = 'Слева',
    centerAlign = 'По центру',
    rightAlign = 'Справа',
    bottomAlign = 'Снизу',
    topAlign = 'Сверху',
    inputHexTitle = 'Введите hex',
    inputHexText = 'Введите hex (например, #FFFFFF)',
    red = 'Красный:',
    green = 'Зелёный:',
    blue = 'Синий:',
    isNotPhyRotation = 'Невращаемый',
    isPhyRotation = 'Вращаемый',
    isSensor = 'Невидимый',
    isNotSensor = 'Видимый',
    staticBody = 'Статическое',
    dynamicBody = 'Динамическое',
    currentCopy = 'Текущая',
    lastCopy = 'Последняя',
    allCopy = 'Все',
    selfCopy = 'Себя',
    newfieldTitle = 'Назовите текстовое поле',
    newfieldText = 'Напишите имя для нового текстового поля',
    newfield = 'Создать текстовое поле',
    newtagTitle = 'Назовите тег',
    newtagText = 'Напишите имя для нового тега',
    newtag = 'Создать тег',
    newfuncTitle = 'Назовите функцию',
    newfuncText = 'Напишите название для новой функции',
    newfunc = 'Создать функцию',
    newtablTitle = 'Назовите таблицу',
    newtablText = 'Напишите название для новой таблицы',
    newtabl = 'Создать таблицу',
    newvariableTitle = 'Назовите переменную',
    newvariableText = 'Напишите название для новой переменной',
    newvariable = 'Создать переменную',
    editorVar = 'Переменные',
    editorTable = 'Таблицы',
    editorFun = 'Функции',
    editorProp = 'Свойства',
    editorLog = 'Логика',
    editorObj = 'Объекты',
    editorDevice = 'Устройство',
    editorLocalTable = 'локал',
    editorInputLocal = 'Локал',
    editorInputText = 'Текст',
    editorTitle = 'Редактор выражений',
    typeevent = 'События',
    typedata = 'Данные',
    typeobject = 'Объекты',
    typecontrol = 'Управление',
    typecontrolother = 'Другое',
    typephysics = 'Физика (Объекты)',
    typenetwork = 'Интернет',
    typeshape = 'Фигуры',
    typetag = 'Теги',
    typephysicsshape = 'Физика (Фигуры)',
    typenot = 'Пусто',
    newblocksTitle = 'Новый блок',
    blocksTitle = 'Блоки',
    close = 'Закрыть',
    errorPermissionText = 'Если Construct Code автоматически не запросил доступ к хранилищу, то сделайте это пожалуйста вручную в настройках вашего телефона, приятной разработки',
    errorPermissionTitle = 'Ошибка доступа',
    noTexture = 'Без текстуры',
    firstScene = 'Основная группа',
    changeTexture = 'Сменить текстуру',
    texturesTitle = 'Текстуры',
    enterTitleTextureText = 'Имя новой текстуры...',
    enterNewTitleTextureText = 'Введите новое имя текстуры...',
    myProgramText = 'Мои программы',
    continueText = 'Продолжить',
    settingsText = 'Настройки',
    buttonInput = 'Ок',
    settingsTitle = 'Настройки',
    settingsStdImport = 'Стандартный импорт картинок',
    settingsPictureView = 'Показывать иллюстрации',
    settingsBorder = 'Показывать границы',
    settingsStatusBar = 'Показывать строку состояния',
    settingsLanguage = 'Язык приложения',
    social = 'Социальные сети',
    socialText = 'Перейти в оффициальные группы/каналы программы',
    vk = 'Вконтакте',
    tg = 'Телеграм',
    objectsTitle = 'Объекты',
    scenesTitle = 'Группы',
    programsTitle = 'Мои программы',
    chooseOrientation = 'Выберите ориентацию',
    chooseOrientationText = 'Выберите ориентацию для нового проекта\nПортретный: 9x16\nЛандшафтный: 16x9',
    portrait = 'Портретный',
    landscape = 'Ландшафтный',
    whichResource = 'Тип ресурса?',
    chooseTypeResource = 'Выберите, какой тип ресурса вы хотите импортировать',
    imageTypeResource = 'Текстура',
    soundTypeResource = 'Звук',
    videoTypeResource = 'Видео',
    fontTypeResource = 'Шрифт',
    whichObject = 'Какой фильтр применить?',
    chooseTypeObject = 'Выберите, какой фильтр применить для текстуры',
    noPixelImage = 'Сглаженная текстура',
    pixelImage = 'Чёткая текстура',
    enterTextDescription = 'Введите текст, который хотите добавить',
    enterText = 'Введите текст',
    enterName = 'Введите имя',
    enterTitle = 'Введите название',
    enterTitleProgramText = 'Название нового проекта...',
    enterTitleResourceText = 'Название нового ресурса...',
    enterTitleRepositoryText = 'Название новой ячейки хранилища...',
    enterTitleSceneText = 'Название новой группы...',
    enterTitleObjectText = 'Имя нового объекта...',
    enterNewTitleProgramText = 'Введите новое название проекта...',
    enterNewTitleResourceText = 'Введите новое название ресурса...',
    enterNewTitleSceneText = 'Введите новое название группы...',
    enterNewTitleObjectText = 'Введите новое имя объекта...',
    chooseAction = 'Выберите действие',
    remove = 'Удалить',
    removeAll = 'Удалить всё',
    hideAll = 'Свернуть всё',
    docums = 'Документация',
    paste = 'Вставить',
    copy = 'Копировать',
    export = 'Экспортировать',
    exportApk = 'Экспортировать в apk',
    rename = 'Переименовать',
    editScene = 'Редактировать группу',
    textures = 'Текстуры',
    ucomment = 'Разморозить',
    comment = 'Заморозить',
    repositoryAlertTake = 'Взять',
    repositoryAlertRemove = 'Удалить',
    repositoryChooseAct = 'Выберите действие',
    repository = 'Хранилище',
    repositoryAdd = 'Добавить в хранилище',
    documentation = 'Информация про блок',
    notexport = 'Экспорт недоступен',
    notexportfull = 'Офлайн экспорт в апк на данный момент модульно тестируется, потом им займутся тестеровщики, а уже потом он будет доступен для всех. Потерпите пожалуйста, максимумальное время на всё тестирование: 2 месяца. Работаю по несколько часов каждый день, чтобы допилить его',
    notexportok = 'Понятно'
  },
  ['en'] = {
    blocks = {
      -- event
      ['onStart'] = {'At start'},
      ['onClick'] = {'When a finger touches an object'},
      ['onClickEnd'] = {'When a finger releases the object'},
      ['onClickMove'] = {'Until a finger lets go of the object', {'Max offset (X):', 'Max offset (Y):'}},
      ['onFun'] = {'When will the function be received', {'Function name:'}},
      ['onCondition'] = {'When the condition becomes true', {'Condition:'}},
      ['onConditionWhile'] = {'As long as the condition is true', {'Condition:'}},
      ['onCollisionStart'] = {'When the collision occurs'},
      ['onCollisionEnd'] = {'When the collision is over'},
      ['onClickDisplay'] = {'When a finger touches the screen'},
      ['onClickDisplayEnd'] = {'When a finger releases the screen'},
      ['onClickDisplayMove'] = {'While your finger touches the screen', {'Max offset (X):', 'Max offset (Y):'}},
      ['onBack'] = {'When you click on the "Back" button'},
      ['onHide'] = {'The application was hidden from the screen'},
      ['onView'] = {'The application was shown on the screen'},

      -- data
      ['setVar'] = {'Set variable value', {'Variable name:', 'Value:'}},
      ['updVar'] = {'Add value to variable', {'Variable name:', 'Value:'}},
      ['setShowText'] = {'Create text', {'Text name:', 'Text:', 'Font:', 'Size:', 'Color:', 'Transparency:'}},
      ['setShowText2'] = {'Create text with width and height', {'Text name:', 'Text:', 'Font:', 'Size:', 'Width:', 'Height:'}},
      ['setRemoveText'] = {'Remove text', {'Text name:'}},
      ['setHideText'] = {'Hide text', {'Text name:'}},
      ['setViewText'] = {'View text', {'Text name:'}},
      ['setText'] = {'Set text', {'Text name:', 'Text:'}},
      ['setVarText'] = {'Bind variable to text', {'Text name:', 'Variable name:'}},
      ['setPosText'] = {'Set text position', {'Text name:', 'Value (X):', 'Value (Y)'}},
      ['setPosXText'] = {'Set text position X', {'Text name:', 'Value (X):'}},
      ['setPosYText'] = {'Set text position Y', {'Text name:', 'Value (Y):'}},
      ['setRotationText'] = {'Set text rotation', {'Text name:', 'Value (0-360):'}},
      ['setAlignText'] = {'Set text align', {'Text name:', 'Align (X):', 'Align (Y):'}},
      ['setAlphaText'] = {'Set text transparency', {'Text name:', 'Value (0-100):'}},
      ['setColorText'] = {'Set text color', {'Text name:', 'Color:'}},
      ['setRGBColorText'] = {'Set rgb text color', {'Text name:', 'Value r (0-255):', 'Value g (0-255):', 'Value b (0-255):'}},
      ['setHEXColorText'] = {'Set hex text color', {'Text name:', 'Value hex:'}},
      ['updColorText'] = {'Change text color', {'Text name:', 'Value (0-255):'}},
      ['updRColorText'] = {'Change text red color', {'Text name:', 'Value (0-255):'}},
      ['updGColorText'] = {'Change text green color', {'Text name:', 'Value (0-255):'}},
      ['updBColorText'] = {'Change text blue color', {'Text name:', 'Value (0-255):'}},
      ['setFrontText'] = {'Place text on layer above', {'Text name:'}},
      ['setBackText'] = {'Place text on layer below', {'Text name:'}},
      ['readVar'] = {'Read variable', {'Variable name:'}},
      ['writeVar'] = {'Write variable', {'Variable name:'}},
      ['updTable'] = {'Overwrite table', {'Table name:', 'Value (Table):'}},
      ['setTable'] = {'Set item to table', {'Key:', 'Table name:', 'Value:'}},
      ['removeTable'] = {'Remove item from table', {'Table name:', 'Key:'}},

      -- object
      ['setPos'] = {'Set position', {'Value (X):', 'Value (Y):'}},
      ['setX'] = {'Set position X', {'Value (X):'}},
      ['setY'] = {'Set position Y', {'Value (Y):'}},
      ['setSize'] = {'Set size', {'Value (%):'}},
      ['setWidth'] = {'Set width', {'Value:'}},
      ['setHeight'] = {'Set height', {'Value:'}},
      ['updX'] = {'Change position X', {'Value (X):'}},
      ['updY'] = {'Change position Y', {'Value (Y):'}},
      ['updSize'] = {'Change size', {'Value (%):'}},
      ['updWidth'] = {'Change width', {'Value:'}},
      ['updHeight'] = {'Change height', {'Value:'}},
      ['setHide'] = {'Hide object from screen'},
      ['setView'] = {'Show object on screen'},
      ['setRotation'] = {'Set rotation', {'Value (0-360):'}},
      ['setAlpha'] = {'Set transparency', {'Value (0-100):'}},
      ['updRotation'] = {'Change rotation', {'Value (0-360):'}},
      ['updAlpha'] = {'Change transparency', {'Value (0-100):'}},
      ['setCopy'] = {'Copy', {'Object name:'}},
      ['removeCopy'] = {'Delete copy', {'Copy:'}},
      ['setTag'] = {'Assign to tag', {'Tag name:'}},
      ['setFlipX'] = {'Flip in X'},
      ['setFlipY'] = {'Flip in Y'},
      ['setTransitionPos'] = {'Slide to position', {'Value (Seconds):', 'Value (X):', 'Value (Y):'}},
      ['setTransitionPosX'] = {'Slide to position X', {'Value (Seconds):', 'Value (X):'}},
      ['setTransitionPosY'] = {'Slide to position Y', {'Value (Seconds):', 'Value (Y):'}},
      ['setTransitionWidth'] = {'Smoothly set width', {'Value (Seconds):', 'Value:'}},
      ['setTransitionHeight'] = {'Smoothly set height', {'Value (Seconds):', 'Value:'}},
      ['setTransitionSize'] = {'Smoothly set size', {'Value (Seconds):', 'Value (%):'}},
      ['setTransitionRotation'] = {'Smoothly set rotation', {'Value (Seconds):', 'Value (0-360):'}},
      ['setTransitionAlpha'] = {'Smoothly set transparency', {'Value (Seconds):', 'Value (0-100):'}},
      ['setTransitionPosAngle'] = {'Slide angle to position', {'Value (Seconds):', 'Value (Angle):', 'Value (X):', 'Value (Y):'}},
      ['setAnchorX'] = {'Set anchor point to X', {'Value (0-100):'}},
      ['setAnchorY'] = {'Set anchor point to Y', {'Value (0-100):'}},
      ['setFront'] = {'Place on layer above'},
      ['setBack'] = {'Place on layer below'},
      ['setNameTexture'] = {'Set texture from name', {'Texture name:'}},
      ['setIndexTexture'] = {'Set texture from index', {'Texture index:'}},
      ['setLinkTexture'] = {'Set texture from link', {'Value (Link):'}},
      ['setResourceTexture'] = {'Set texture from resources', {'Resource name:'}},
      ['resetSize'] = {'Set size to texture'},

      -- shape
      ['createRect'] = {'Create rect', {'Shape name:', 'Roundness corners:', 'Width:', 'Height:'}},
      ['createCircle'] = {'Create circle', {'Shape name:', 'Radius:'}},
      ['createPolygon'] = {'Create polygon', {'Shape name:', 'Angle table:'}},
      ['createCopy'] = {'Create copy', {'Shape name:'}},
      ['setListenerShape'] = {'Snap shape to events', {'Shape name:'}},
      ['setSnapshotShape'] = {'Snap shape to snapshot', {'Shape name:'}},
      ['removeShape'] = {'Remove shape', {'Shape name:'}},
      ['removeListenerShape'] = {'Untie shape from events', {'Shape name:'}},
      ['removeSnapshotShape'] = {'Untie shape from snapshot', {'Shape name:'}},
      ['setPosShape'] = {'Set shape position', {'Shape name:', 'Value (X):', 'Value (Y):'}},
      ['setPosXShape'] = {'Set shape position X', {'Shape name:', 'Value (X):'}},
      ['setPosYShape'] = {'Set shape position Y', {'Shape name:', 'Value (Y):'}},
      ['setSizeShape'] = {'Set shape size', {'Shape name:', 'Value (%):'}},
      ['setRadiusShape'] = {'Set shape radius (circle)', {'Shape name:', 'Value (Radius):'}},
      ['resetSizeShape'] = {'Set shape size to texture', {'Shape name:'}},
      ['setWidthShape'] = {'Set shape width', {'Shape name:', 'Value:'}},
      ['setHeightShape'] = {'Set shape height', {'Shape name:', 'Value:'}},
      ['setNameTextureShape'] = {'Overlay texture to name', {'Shape name:', 'Texture name:'}},
      ['setSdcardTextureShape'] = {'Apply texture to file path', {'Shape name:', 'Path to file:'}},
      ['setIndexTextureShape'] = {'Overlay texture to index', {'Shape name:', 'Texture index:'}},
      ['setMediaTextureShape'] = {'Apply texture from gallery', {'Shape name:'}},
      ['setResourceTextureShape'] = {'Apply texture from resources', {'Shape name:', 'Resource name:'}},
      ['updPosXShape'] = {'Change shape position X', {'Shape name:', 'Value (X):'}},
      ['updPosYShape'] = {'Change shape position Y', {'Shape name:', 'Value (Y):'}},
      ['updSizeShape'] = {'Change shape size', {'Shape name:', 'Value (%):'}},
      ['updWidthShape'] = {'Change shape width', {'Shape name:', 'Value:'}},
      ['updHeightShape'] = {'Change shape height', {'Shape name:', 'Value:'}},
      ['setHideShape'] = {'Hide shape from screen', {'Shape name:'}},
      ['setViewShape'] = {'Show shape on screen', {'Shape name:'}},
      ['setColorShape'] = {'Set shape color', {'Shape name:', 'Color:'}},
      ['setRGBColorShape'] = {'Set rgb shape color', {'Shape name:', 'Value r (0-255):', 'Value g (0-255):', 'Value b (0-255):'}},
      ['setHEXColorShape'] = {'Set hex shape color', {'Shape name:', 'Value hex:'}},
      ['setRotationShape'] = {'Set shape rotation', {'Shape name:', 'Value (0-360):'}},
      ['setAlphaShape'] = {'Set shape transparency', {'Shape name:', 'Value (0-100):'}},
      ['updRotationShape'] = {'Change shape rotation', {'Shape name:', 'Value (0-360):'}},
      ['updAlphaShape'] = {'Change shape transparency', {'Shape name:', 'Value (0-100):'}},
      ['setFlipXShape'] = {'Flip shape in X', {'Shape name:'}},
      ['setFlipYShape'] = {'Flip shape in Y', {'Shape name:'}},
      ['setTransitionPosShape'] = {'Slide to position', {'Shape name:', 'Value (Seconds):', 'Value (X):', 'Value (Y):'}},
      ['setTransitionPosXShape'] = {'Slide to position X', {'Shape name:', 'Value (Seconds):', 'Value (X):'}},
      ['setTransitionPosYShape'] = {'Slide to position Y', {'Shape name:', 'Value (Seconds):', 'Value (Y):'}},
      ['setTransitionWidthShape'] = {'Set width smoothly', {'Shape name:', 'Value (Seconds):', 'Value:'}},
      ['setTransitionHeightShape'] = {'Set height smoothly', {'Shape name:', 'Value (Seconds):', 'Value:'}},
      ['setTransitionSizeShape'] = {'Set size smoothly', {'Shape name:', 'Value (Seconds):', 'Value (%):'}},
      ['setTransitionRotationShape'] = {'Set rotation smoothly', {'Shape name:', 'Value (Seconds):', 'Value (0-360):'}},
      ['setTransitionAlphaShape'] = {'Set transparency smoothly', {'Shape name:', 'Value (Seconds):', 'Value (0-100):'}},
      ['setTransitionPosAngleShape'] = {'Slide angle to position', {'Shape name:', 'Value (Seconds):', 'Value (Angle):', 'Value (X):', 'Value (Y):'}},
      ['setAnchorShape'] = {'Set shape anchor point', {'Shape name:', 'Value X (0-100):', 'Value Y (0-100):'}},
      ['setFrontShape'] = {'Place shape on layer above', {'Shape name:'}},
      ['setBackShape'] = {'Place shape on layer below', {'Shape name:'}},

      -- tags
      ['setTag'] = {'Assign object to tag', {'Tag name:'}},
      ['setTagShape'] = {'Assign shape to tag', {'Tag name:', 'Shape name:'}},
      ['setPosTag'] = {'Set tag position', {'Tag name:', 'Value (X):', 'Value (Y):'}},
      ['setXTag'] = {'Set tag position X', {'Tag name:', 'Value (X):'}},
      ['setYTag'] = {'Set tag position Y', {'Tag name:', 'Value (Y):'}},
      ['updXTag'] = {'Change tag position X', {'Tag name:', 'Value (X):'}},
      ['updYTag'] = {'Change tag position Y', {'Tag name:', 'Value (Y):'}},
      ['setHideTag'] = {'Hide tag from screen', {'Tag name:'}},
      ['setViewTag'] = {'View tag on screen', {'Tag name:'}},
      ['setAlphaTag'] = {'Set tag transparency', {'Tag name:', 'Value (0-100):'}},
      ['updAlphaTag'] = {'Change tag transparency', {'Tag name:', 'Value (0-100):'}},
      ['setTransitionPosTag'] = {'Slide to position', {'Tag name:', 'Value (Seconds):', 'Value (X):', 'Value (Y):'}},
      ['setTransitionPosXTag'] = {'Slide to position X', {'Tag name:', 'Value (Seconds):', 'Value (X):'}},
      ['setTransitionPosYTag'] = {'Slide to position Y', {'Tag name:', 'Value (Seconds):', 'Value (Y):'}},
      ['setTransitionAlphaTag'] = {'Set transparency smoothly', {'Tag name:', 'Value (Seconds):', 'Value (0-100):'}},
      ['setFrontTag'] = {'Place tag on layer above', {'Tag name:'}},
      ['setBackTag'] = {'Place tag on layer below', {'Tag name:'}},
      ['setXSnapshot'] = {'Set snapshot position X', {'Value (X):'}},
      ['setYSnapshot'] = {'Set snapshot position Y', {'Value (Y):'}},
      ['updXSnapshot'] = {'Change snapshot position X', {'Value (X):'}},
      ['updYSnapshot'] = {'Change snapshot position Y', {'Value (Y):'}},
      ['setHideSnapshot'] = {'Hide snapshot from screen'},
      ['setViewSnapshot'] = {'View snapshot on screen'},
      ['setAlphaSnapshot'] = {'Set snapshot transparency', {'Value (0-100):'}},
      ['updAlphaSnapshot'] = {'Change snapshot transparency', {'Value (0-100):'}},

      -- control
      ['fun'] = {'Call a function', {'Function name:'}},
      ['funParams'] = {'Call a function with parameters', {'Function name:', 'Table name:'}},
      ['useTag'] = {'Use blocks for tag', {'Tag name:'}},
      ['useTagEnd'] = {'End of tag use'},
      ['useCopy'] = {'Use blocks for copies', {'Copy:'}},
      ['useCopyEnd'] = {'End of copies use'},
      ['if'] = {'If the condition is true', {'Condition:'}},
      ['ifElse'] = {'If the condition is true, Otherwise', {'Condition:'}},
      ['else'] = {'Otherwise'},
      ['ifEnd'] = {'End of condition'},
      ['ifElseEnd'] = {'End of condition'},
      ['while'] = {'Repeat while condition is true', {'Condition:'}},
      ['whileEnd'] = {'End of conditional repeat'},
      ['for'] = {'Repeat N times', {'Number of repetitions (N):'}},
      ['forEnd'] = {'End of repeat'},
      ['forI'] = {'Cycle', {'Local (Index):', 'Value (From):', 'Value (To):', 'Value (Step):'}},
      ['forIEnd'] = {'End of cycle'},
      ['forT'] = {'Go through all elements of the table', {'Table name:', 'Local (Value):', 'Local (Key)'}},
      ['forTEnd'] = {'End of element pass'},
      ['enterFrame'] = {'Repeat forever'},
      ['enterFrameEnd'] = {'End of eternity'},
      ['timer'] = {'Timer', {'Value (Seconds):', 'Number of repetitions:'}},
      ['timerEnd'] = {'End of timer'},
      ['groupCreate'] = {'Create group', {'Group name:'}},
      ['groupView'] = {'View group', {'Group name:'}},
      ['setColorBackground'] = {'Set background color', {'Color:'}},
      ['setRGBColorBackground'] = {'Set rgb background color', {'Value r (0-255):', 'Value g (0-255):', 'Value b (0-255):'}},
      ['setHEXColorBackground'] = {'Set hex background color', {'Value hex:'}},
      ['setPortraitOrientation'] = {'Set portrait orientation'},
      ['setLandscapeOrientation'] = {'Set landscape orientation'},
      ['fileLine'] = {'Read file line by line', {'Local (Value):', 'Path to file:', 'Catalog:'}},
      ['fileLineEnd'] = {'End of reading the file'},
      ['fileRead'] = {'Read file', {'Variable name:', 'Path to file:', 'Catalog:'}},
      ['fileWrite'] = {'Overwrite file', {'Value:', 'Path to file:', 'Catalog:'}},
      ['fileUpdate'] = {'Write to the end of the file', {'Value:', 'Path to file:', 'Catalog:'}},
      ['fileMove'] = {'Move/rename file', {'Path to file (1):', 'Catalog (1):', 'Path to file (2):', 'Catalog (2):'}},
      ['fileCopy'] = {'Copy file', {'Path to file (1):', 'Catalog (1):', 'Path to file (2):', 'Catalog (2):'}},
      ['fileRemove'] = {'Delete file', {'Path to file:', 'Catalog:'}},
      ['setAccelerometer'] = {'Enable accelerometer'},
      ['setAccelerometerInterval'] = {'Set accelerometer frequency', {'Value (Hz):'}},
      ['setNotifications'] = {'Register notification', {'Value (Text):', 'Value (Seconds):', 'Sound:'}},
      ['onMultitouch'] = {'Activate multitouch'},
      ['offMultitouch'] = {'Deactivate multitouch'},
      ['closeApp'] = {'Close application'},
      ['commentYourself'] = {'Comment (for yourself)', {'Comment:'}},

      -- controlother
      ['playSound'] = {'Play sound', {'Resource name:', 'Number of repetitions:'}},
      ['pauseSound'] = {'Pause sound', {'Resource name:'}},
      ['resumeSound'] = {'Resume sound', {'Resource name:'}},
      ['rewindSound'] = {'Rewind sound', {'Resource name:', 'Value (Seconds):'}},
      ['setVolumeSound'] = {'Set sound volume', {'Resource name:', 'Value (0-1000):'}},
      ['setTotalVolumeSound'] = {'Set total sound volume', {'Value (0-1000):'}},
      ['stopSound'] = {'Stop all sounds'},
      ['createVideo'] = {'Create video', {'Video name:', 'Resource name:'}},
      ['createLinkVideo'] = {'Create video from liяnk', {'Video name:', 'Value (Link):'}},
      ['rewindVideo'] = {'Rewind video', {'Video name:', 'Value (Seconds):'}},
      ['playVideo'] = {'Unpause video', {'Video name:'}},
      ['pauseVideo'] = {'Pause video', {'Video name:'}},
      ['viewVideo'] = {'View video', {'Video name:'}},
      ['hideVideo'] = {'Hide video', {'Video name:'}},
      ['muteVideo'] = {'Mute video', {'Video name:'}},
      ['unmuteVideo'] = {'Unmute video', {'Video name:'}},
      ['setPosVideo'] = {'Set video position', {'Video name:', 'Value (X):', 'Value (Y):'}},
      ['setWidthVideo'] = {'Set video width', {'Video name:', 'Value:'}},
      ['inputText'] = {'Get text from user', {'User text:', 'Variable name:'}},
      ['createTextField'] = {'Create one line text field', {'Text field:', 'User text:', 'Color:', 'Size:', 'Field background:', 'Font:'}},
      ['createTextBox'] = {'Create multiline text field', {'Text field:', 'User text:', 'Color:', 'Size:', 'Field background:', 'Font:'}},
      ['removeTextField'] = {'Delete text field', {'Text field:'}},
      ['getTextField'] = {'Get text from field', {'Text field:', 'Variable name:'}},
      ['setTextField'] = {'Set text to field', {'Text field:', 'Value (Text):'}},
      ['getOldTextField'] = {'Get old text', {'Text field:', 'Variable name:'}},
      ['setPosField'] = {'Set the position of the text field', {'Text field:', 'Value (X):', 'Value (Y):'}},
      ['setSizeField'] = {'Set the dimensions of the text field', {'Text field:', 'Value (Width):', 'Value (Height):'}},
      ['setHideField'] = {'Hide text field', {'Text field:'}},
      ['setViewField'] = {'Show text field', {'Text field:'}},
      ['setInputTypeField'] = {'Set input type', {'Text field:', 'Input type:'}},
      ['setEditField'] = {'Permission to edit', {'Text field:', 'Permission:'}},
      ['closeKeyboard'] = {'Turn off the onscreen keyboard'},
      ['createEmitter'] = {'Create emitter', {'Emitter name:', 'Emitter type:'}},
      ['setPosEmitter'] = {'Set emitter position', {'Emitter name:', 'Value (X):', 'Value (Y):'}},
      ['setSizeEmitter'] = {'Set emitter size', {'Emitter name:', 'Value (%):'}},
      ['setSpeedEmitter'] = {'Set emitter speed', {'Emitter name:', 'Value (Speed):'}},
      ['setRotationEmitter'] = {'Set emitter rotation', {'Emitter name:', 'Value (0-360):'}},
      ['setGravityEmitter'] = {'Set emitter gravity', {'Emitter name:', 'Value (X):', 'Value (Y):'}},
      ['removeEmitter'] = {'Remove emitter', {'Emitter name:'}},
      ['removeAllEmitter'] = {'Remove all emitter'},
      ['setStartRedColorEmitter'] = {'Set initial red color', {'Emitter name:', 'Value r (0-100):'}},
      ['setStartGreenColorEmitter'] = {'Set initial green color', {'Emitter name:', 'Value g (0-100):'}},
      ['setStartBlueColorEmitter'] = {'Set initial blue color', {'Emitter name:', 'Value b (0-100):'}},
      ['setStartAlphaColorEmitter'] = {'Set initial transparency', {'Emitter name:', 'Value a (0-100):'}},
      ['setFinishRedColorEmitter'] = {'Set final red color', {'Emitter name:', 'Value r (0-100):'}},
      ['setFinishGreenColorEmitter'] = {'Set final green color', {'Emitter name:', 'Value g (0-100):'}},
      ['setFinishBlueColorEmitter'] = {'Set final blue color', {'Emitter name:', 'Value b (0-100):'}},
      ['setFinishAlphaColorEmitter'] = {'Set final transparency', {'Emitter name:', 'Value a (0-100):'}},

      -- physics (objects)
      ['setBody'] = {'Add physical body', {'Type:', 'Density:', 'Bounce:', 'Friction:'}},
      ['removeBody'] = {'Remove physical body'},
      ['setNewBody'] = {'Set type', {'Type:'}},
      ['setHitboxMesh'] = {'Set hitbox (mesh)', {'Coarseness texels:'}},
      ['setHitboxBox'] = {'Set hitbox (structure)', {'Hitbox:'}},
      ['setHitboxCircle'] = {'Set hitbox (circle)', {'Value (Radius):'}},
      ['updHitbox'] = {'Update hitbox'},
      ['setGravity'] = {'Set gravity', {'Value (Gravity):'}},
      ['setLinearVelocity'] = {'Jump', {'Value (X):', 'Value (Y):'}},
      ['setLinearVelocityX'] = {'Jump X', {'Value (X):'}},
      ['setLinearVelocityY'] = {'Jump Y', {'Value (Y):'}},
      ['setSensor'] = {'Set sensor mode'},
      ['setNotSensor'] = {'Delete sensor mode'},
      ['setFixedRotation'] = {'Make the body non-rotatable'},
      ['setNotFixedRotation'] = {'Make the body rotate'},
      ['setWorldGravity'] = {'Set world gravity', {'Value (X):', 'Value (Y):'}},
      ['setVisiblePhysics'] = {'View hitboxes'},
      ['setNotVisiblePhysics'] = {'Hide hitboxes'},
      ['setBullet'] = {'Set bullet property'},
      ['setNotBullet'] = {'Remove bullet property'},
      ['setAwake'] = {'To wake'},
      ['setAngularVelocity'] = {'Set angular velocity', {'Value:'}},
      ['setAngularDamping'] = {'Set angular damping', {'Value:'}},
      ['setLinearDamping'] = {'Set linear damping', {'Value:'}},
      ['setForce'] = {'Apply force', {'Value (X):', 'Value (Y):'}},
      ['setLinearImpulse'] = {'Apply linear impulse', {'Value (X):', 'Value (Y):'}},
      ['setTorque'] = {'Apply torque', {'Value:'}},
      ['setAngularImpulse'] = {'Apply angular impulse', {'Value:'}},
      ['setPowerPhysics'] = {'Set physics power', {'Computing power:'}},
      ['startPhysics'] = {'Enable physics'},
      ['stopPhysics'] = {'Disable physics'},

      -- physics (shapes)
      ['setBodyShape'] = {'Add physical body', {'Shape name:', 'Type:', 'Density:', 'Bounce:', 'Friction:'}},
      ['removeBodyShape'] = {'Remove physical body', {'Shape name:'}},
      ['setNewBodyShape'] = {'Set type', {'Shape name:', 'Type:'}},
      ['setHitboxMeshShape'] = {'Set hitbox (mesh)', {'Shape name:', 'Coarseness texels:'}},
      ['setHitboxBoxShape'] = {'Set hitbox (structure)', {'Shape name:', 'Hitbox:'}},
      ['setHitboxCircleShape'] = {'Set hitbox (circle)', {'Shape name:', 'Value (Radius):'}},
      ['updHitboxShape'] = {'Update hitbox', {'Shape name:'}},
      ['setGravityShape'] = {'Set gravity', {'Shape name:', 'Value (Gravity):'}},
      ['setLinearVelocityShape'] = {'Jump', {'Shape name:', 'Value (X):', 'Value (Y):'}},
      ['setLinearVelocityXShape'] = {'Jump X', {'Shape name:', 'Value (X):'}},
      ['setLinearVelocityYShape'] = {'Jump Y', {'Shape name:', 'Value (Y):'}},
      ['setSensorShape'] = {'Set sensor mode', {'Shape name:'}},
      ['setNotSensorShape'] = {'Delete sensor mode', {'Shape name:'}},
      ['setFixedRotationShape'] = {'Make the body non-rotatable', {'Shape name:'}},
      ['setNotFixedRotationShape'] = {'Make the body rotate', {'Shape name:'}},
      ['setBulletShape'] = {'Set bullet property', {'Shape name:'}},
      ['setNotBulletShape'] = {'Remove bullet property', {'Shape name:'}},
      ['setAwakeShape'] = {'To wake', {'Shape name:'}},
      ['setAngularVelocityShape'] = {'Set angular velocity', {'Shape name:', 'Value:'}},
      ['setAngularDampingShape'] = {'Set angular damping', {'Shape name:', 'Value:'}},
      ['setLinearDampingShape'] = {'Set linear damping', {'Shape name:', 'Value:'}},
      ['setForceShape'] = {'Apply force', {'Shape name:', 'Value (X):', 'Value (Y):'}},
      ['setLinearImpulseShape'] = {'Apply linear impulse', {'Shape name:', 'Value (X):', 'Value (Y):'}},
      ['setTorqueShape'] = {'Apply torque', {'Shape name:', 'Value:'}},
      ['setAngularImpulseShape'] = {'Apply angular impulse', {'Shape name:', 'Value:'}},

      -- network
      ['openUrl'] = {'Open link in browser', {'Value (Link):'}},
      ['setGet'] = {'GET request', {'Value (Link):', 'Variable name:'}},
      ['setPost'] = {'POST request', {'Value (Link):', 'Body:', 'Variable name:', 'Headers:'}},
      ['setPut'] = {'PUT request', {'Value (Link):', 'Body:', 'Variable name:', 'Headers:'}},
      ['setPatch'] = {'PATCH request', {'Value (Link):', 'Body:', 'Variable name:', 'Headers:'}},
      ['setDelete'] = {'DELETE request', {'Value (Link):', 'Variable name:'}},
      ['setToken'] = {'Initialize token Firebase', {'Value (Token):'}},
      ['putFirebase'] = {'Write to Firebase', {'Key:', 'Variable name:', 'Value:'}},
      ['patchFirebase'] = {'Update to Firebase', {'Key:', 'Variable name:', 'Value:'}},
      ['getFirebase'] = {'Get from Firebase', {'Key:', 'Variable name:'}},
      ['deleteFirebase'] = {'Delete from Firebase', {'Key:', 'Variable name:'}}
    },
    editorList = {
      fun = {
        {'key', 'key'},
        {'power', 'power'},
        {'radical', 'radical'},
        {'random', 'random'},
        {'random_string', 'random_str'},
        {'round', 'round'},
        {'remainder', 'remainder'},
        {'module', 'module'},
        {'to_number', 'tonumber'},
        {'to_text', 'tostring'},
        {'replace_in_text', 'gsub'},
        {'character_from_text', 'sub'},
        {'length_text', 'len'},
        {'find_in_text', 'find'},
        {'key_check', 'key_check'},
        {'table_size', 'table_size'},
        {'json_decode', 'json_decode'},
        {'json_encode', 'json_encode'},
        {'regular_expression', 'match'},
        {'max', 'max'},
        {'min', 'min'},
        {'sinus', 'sin'},
        {'cosinus', 'cos'},
        {'tangent', 'tan'},
        {'cotangent', 'ctan'},
        {'arcsinus', 'arcsin'},
        {'arccosinus', 'arccos'},
        {'arctangent', 'arctan'},
        {'arctangent2', 'arctan2'},
        {'arccotangent', 'arcctan'},
        {'natural_logarithm', 'log'},
        {'decimal_logarithm', 'log10'},
        {'pi', 'pi'},
        {'unix_time', 'unix_time'},
      },
      prop = {
        {'get_text', 'get_text'},
        {'positionX', 'posX'},
        {'positionY', 'posY'},
        {'positionZ', 'posZ'},
        {'width', 'width'},
        {'height', 'height'},
        {'click', 'click'},
        {'total_len_sound', 'total_len_sound'},
        {'current_len_sound', 'current_len_sound'},
        {'total_len_video', 'total_len_video'},
        {'current_len_video', 'current_len_video'},
        {'rotation', 'rotation'},
        {'transparency', 'alpha'},
        {'index_texture', 'index_texture'},
        {'name_texture', 'name_texture'},
        -- {'count_copies', 'count_copies'},
        {'tag', 'tag'},
        {'velocity_x', 'velocity_x'},
        {'velocity_x', 'velocity_y'},
        {'angular_velocity', 'angular_velocity'},
      },
      log = {
        {',', ','},
        {'true', 'true'},
        {'false', 'false'},
        {'=', '='},
        {'>', '>'},
        {'<', '<'},
        {'>=', '>='},
        {'<=', '<='},
        {'≠', '~='},
        {'and', 'and'},
        {'or', 'or'},
        {'not', 'not'},
      },
      device = {
        {'fps', 'fps'},
        {'width_screen', 'width_screen'},
        {'height_screen', 'height_screen'},
        {'top_point_screen', 'top_point_screen'},
        {'bottom_point_screen', 'bottom_point_screen'},
        {'rigth_point_screen', 'rigth_point_screen'},
        {'left_point_screen', 'left_point_screen'},
        {'top_border_height', 'height_top'},
        {'bottom_border_height', 'height_bottom'},
        {'finger_touching_screen', 'finger_touching_screen'},
        {'finger_touching_screen_x', 'finger_touching_screen_x'},
        {'finger_touching_screen_y', 'finger_touching_screen_y'},
        {'count_touch', 'count_touch'},
        {'count_of_fingers', 'count_touch'},
        {'count_of_touch', 'count_tap'},
        {'acceleration_x', 'gravity_x'},
        {'acceleration_y', 'gravity_y'},
        {'acceleration_z', 'gravity_z'},
        {'change_tilt_x', 'instant_x'},
        {'change_tilt_y', 'instant_y'},
        {'change_tilt_z', 'instant_z'},
        {'tilt_x', 'raw_x'},
        {'tilt_x', 'raw_y'},
        {'tilt_x', 'raw_z'},
      }
    },
    importErrorTitle = 'Download Update',
    importError = 'This application is made on a newer version of CCode, please download the update',
    exportCCode = 'Wait please... \nArchive .ccode is generated',
    importCCode = 'Wait please... \nThe archive .ccode is unpacked',
    offMagnetX = 'Turn off magnet on X',
    offMagnetY = 'Turn off magnet on Y',
    onMagnetX = 'Turn on magnet on X',
    onMagnetY = 'Turn on magnet on Y',
    saveAndExit = 'Save hitbox and exit',
    index = 'Index: ',
    indexBox = 'Structure index',
    viewIndexBox = 'View structure index',
    viewLines = 'View lines',
    hideLines = 'Hide lines',
    onPhysics = 'Enable physics',
    viewHitbox = 'View hitbox',
    hideHitbox = 'Hide hitbox',
    addBox = 'Add structure',
    removeBox = 'Delete structure',
    addPoint = 'Add point',
    removePoint = 'Delete point',
    shapephyscircle = 'Circle',
    shapephysbox = 'Structures',
    shapephysmesh = 'Mesh',
    editfieldtrue = 'Can edit',
    editfieldfalse = 'Can\'t edit',
    typefielddefault = 'Default',
    typefieldnumber = 'Number',
    typefielddecimal = 'Decimal',
    typefieldphone = 'Phone number',
    typefieldurl = 'Link',
    typefieldemail = 'Email',
    typefieldnoemoji = 'No emoji',
    bgfieldtrue = 'Leave',
    bgfieldfalse = 'Remove',
    resourcesTitle = 'Resources',
    resource = 'Manage resources',
    leftAlign = 'Left',
    centerAlign = 'Center',
    rightAlign = 'Right',
    bottomAlign = 'Bottom',
    topAlign = 'Top',
    inputHexTitle = 'Enter hex',
    inputHexText = 'Enter hex (e.g. #FFFFFF)',
    red = 'Red:',
    green = 'Green:',
    blue = 'Blue:',
    isNotPhyRotation = 'Not rotatable',
    isPhyRotation = 'Rotatable',
    isSensor = 'Not visible',
    isNotSensor = 'Visible',
    staticBody = 'Static',
    dynamicBody = 'Dinamic',
    currentCopy = 'Current',
    lastCopy = 'Last',
    allCopy = 'All',
    selfCopy = 'Self',
    newfieldTitle = 'Name the text field',
    newfieldText = 'Write a name for the new text field',
    newfield = 'Create text field',
    newtagTitle = 'Name the tag',
    newtagText = 'Write a name for the new tag',
    newtag = 'Create tag',
    newfuncTitle = 'Name the function',
    newfuncText = 'Write a name for the new function',
    newfunc = 'Create function',
    newtablTitle = 'Name the table',
    newtablText = 'Write a name for the new table',
    newtabl = 'Create table',
    newvariableTitle = 'Name the variable',
    newvariableText = 'Write a name for the new variable',
    newvariable = 'Create variable',
    editorVar = 'Variables',
    editorTable = 'Tables',
    editorFun = 'Functions',
    editorProp = 'Properties',
    editorLog = 'Logics',
    editorObj = 'Objects',
    editorDevice = 'Device',
    editorLocalTable = 'local',
    editorInputLocal = 'Local',
    editorInputText = 'Text',
    editorTitle = 'Expression editor',
    typeevent = 'Events',
    typedata = 'Data',
    typeobject = 'Objects',
    typecontrol = 'Control',
    typecontrolother = 'Other',
    typephysics = 'Physics (Objects)',
    typenetwork = 'Network',
    typeshape = 'Shapes',
    typetag = 'Tags',
    typephysicsshape = 'Physics (Shapes)',
    typenot = 'Empty',
    newblocksTitle = 'New block',
    blocksTitle = 'Blocks',
    close = 'Close',
    errorPermissionText = 'If Construct Code did not automatically request access to the repository, then please do it manually in the settings of your phone, nice development',
    errorPermissionTitle = 'Access error',
    noTexture = 'No texture',
    firstScene = 'Main group',
    changeTexture = 'Change texture',
    texturesTitle = 'Textures',
    enterTitleTextureText = 'Name a new texture...',
    enterNewTitleTextureText = 'Enter a new texture name...',
    myProgramText = 'My programs',
    continueText = 'Continue',
    settingsText = 'Settings',
    buttonInput = 'Ok',
    settingsTitle = 'Settings',
    settingsStdImport = 'Standard image import',
    settingsPictureView = 'Show illustrations',
    settingsBorder = 'Show borders',
    settingsStatusBar = 'Show status bar',
    settingsLanguage = 'Application language',
    social = 'Social networks',
    socialText = 'Go to the official groups/channels of the program',
    vk = 'Vkontakte',
    tg = 'Telegram',
    objectsTitle = 'Objects',
    scenesTitle = 'Groups',
    programsTitle = 'My programs',
    chooseOrientation = 'Choose orientation',
    chooseOrientationText = 'Choose an orientation for a new project\nPortrait: 9x16\nLandscape: 16x9',
    portrait = 'Portrait',
    landscape = 'Landscape',
    whichResource = 'Resource type?',
    chooseTypeResource = 'Choose which type of resource you want to import',
    imageTypeResource = 'Texture',
    soundTypeResource = 'Sound',
    videoTypeResource = 'Video',
    fontTypeResource = 'Font',
    whichObject = 'Which filter apply?',
    chooseTypeObject = 'Choose which filter to apply to the texture',
    noPixelImage = 'Smoothed texture',
    pixelImage = 'Precise texture',
    enterTextDescription = 'Enter the text you want to add',
    enterText = 'Enter text',
    enterName = 'Enter name',
    enterTitle = 'Enter title',
    enterTitleProgramText = 'New project name...',
    enterTitleResourceText = 'New resource name...',
    enterTitleRepositoryText = 'New repository cell name...',
    enterTitleSceneText = 'New group name...',
    enterTitleObjectText = 'New object name...',
    enterNewTitleProgramText = 'Enter a new project name...',
    enterNewTitleResourceText = 'Enter a new resource name...',
    enterNewTitleSceneText = 'Enter a new group name...',
    enterNewTitleObjectText = 'Enter a new object name...',
    chooseAction = 'Choose action',
    remove = 'Remove',
    hideAll = 'Collapse all',
    removeAll = 'Remove all',
    docums = 'Documentations',
    paste = 'Paste',
    copy = 'Copy',
    export = 'Export',
    exportApk = 'Export to apk',
    rename = 'Rename',
    editScene = 'Edit group',
    textures = 'Texrures',
    ucomment = 'Uncomment',
    comment = 'Comment',
    repositoryAlertTake = 'Take',
    repositoryAlertRemove = 'Remove',
    repositoryChooseAct = 'Choose act',
    repository = 'Repository',
    repositoryAdd = 'Add to repository',
    documentation = 'Block information',
    notexport = 'Export not available',
    notexportfull = 'Offline export to apk is currently being unit tested, then testers will take care of it, and only then it will be available to everyone. Please bear with the maximum time for all testing: 2 months. I work a few hours every day to finish it',
    notexportok = 'Understand'
  },
}
